/*=========================================================================\
* Copyright(C)2016 Chudai.
*
* File name    : pqarray.h
* Version      : v1.0.0
* Author       : i.sshe
* Github       : github.com/isshe
* Date         : 2016/06/22
* Description  : 优先队列的数组实现
* Function list: 1.
*                2.
*                3.
* History      :
\*=========================================================================*/

#ifndef PQARRAY_H_
#define PQARRAY_H_

#ifdef __cplusplus
extern "C"{
#endif

/*=========================================================================*\
 * #include#                                                               *
\*=========================================================================*/

/*=========================================================================*\
 * #define#                                                                *
\*=========================================================================*/
#define INITVALUE       (-1)
/*=========================================================================*\
 * #enum#                                                                  *
\*=========================================================================*/

/*=========================================================================*\
 * #struct#                                                                *
\*=========================================================================*/
typedef struct PQUEUE_S_
{
     int    capacity;       //最大大小
     int    size;           //当前大小
     int    *array;
}pqueue_s, *ppqueue_s;
/*=========================================================================*\
 * #function#                                                              *
\*=========================================================================*/


/*=====================================================================\
* Function   (名称): create_queue()
* Description(功能): 新建一个队列,调用函数提供
* Called By  (被调): 1.
* Call_B file(被文): 1.
* Calls list (调用): 1.
* Calls file (调文): 1.
* Input      (输入): 1.
* Output     (输出): 1.
* Return     (返回):
*         success  :
*         failure  :
* Change log (修改): 1.
* Others     (其他): 1.
\*=====================================================================*/
ppqueue_s create_queue(int capacity);


/*=====================================================================\
* Function   (名称): insert_data()
* Description(功能): 插入数据,构造的是最小堆.
* Called By  (被调): 1.
* Call_B file(被文): 1.
* Calls list (调用): 1.
* Calls file (调文): 1.
* Input      (输入): 1.
* Output     (输出): 1.
* Return     (返回):
*         success  :
*         failure  :
* Change log (修改): 1.
* Others     (其他): 1.
\*=====================================================================*/
int insert_data(ppqueue_s queue, int value);


/*=====================================================================\
* Function   (名称): delete_min()
* Description(功能): 删除一个最小的数据
* Called By  (被调): 1.
* Call_B file(被文): 1.
* Calls list (调用): 1.
* Calls file (调文): 1.
* Input      (输入): 1.
* Output     (输出): 1.
* Return     (返回):
*         success  :
*         failure  :
* Change log (修改): 1.
* Others     (其他): 1.
\*=====================================================================*/
int delete_min(ppqueue_s queue);

/*=====================================================================\
* Function   (名称): output_queue()
* Description(功能): 打印数据
* Called By  (被调): 1.
* Call_B file(被文): 1.
* Calls list (调用): 1.
* Calls file (调文): 1.
* Input      (输入): 1.
* Output     (输出): 1.
* Return     (返回):
*         success  :
*         failure  :
* Change log (修改): 1.
* Others     (其他): 1.
\*=====================================================================*/
void output_queue(ppqueue_s queue);

#ifdef __cplusplus
}
#endif

#endif

